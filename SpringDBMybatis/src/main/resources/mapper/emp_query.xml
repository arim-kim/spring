<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mycom.mybatis.dao.EmpDao">
	<select id="empDetail" parameterType="int"
		resultType="com.mycom.mybatis.dto.EmpDto">
		select employeeId, first_name, last_name, email, hiredate
		from emp where employeeId = #{employeeId}
	</select>

	<!-- return 이 Collections 이면 Dto 만 기술 -->
	<select id="empList" resultType="com.mycom.mybatis.dto.EmpDto">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp
	</select>

	<!-- return 이 primitive 이면 별도 기술 X -->
	<insert id="empInsert"
		parameterType="com.mycom.mybatis.dto.EmpDto">
		insert into emp (employeeId, first_name, last_name,
		email, hiredate)
		values( #{employeeId}, #{firstName}, #{lastName},
		#{email}, #{hireDate})
	</insert>

	<update id="empUpdate"
		parameterType="com.mycom.mybatis.dto.EmpDto">
		update emp
		set first_name = #{firstName}
		,last_name =
		#{lastName}
		,email = #{email}
		,hiredate = #{hireDate}
		where employeeId =
		#{employeeId}
	</update>

	<delete id="empDelete" parameterType="int">
		update emp
		set first_name =
		#{firstName}
		,last_name = #{lastName}
		,email = #{email}
		,hiredate =
		#{hireDate}
		where employeeId = #{employeeId}
	</delete>

	<select id="empListLike" parameterType="string"
		resultType="com.mycom.mybatis.dto.EmpDto">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp where first_name like CONCAT('%', #{searchWord}, '%')
	</select>

	<!-- ResultMap property : java dto 필드명, column : sql column 이름 -->

	<resultMap type="com.mycom.mybatis.dto.EmpDto" id="empMap">
		<result property="employeeId" column="employeeId"></result>
		<result property="firstName" column="first_name"></result>
		<result property="lastName" column="last_name"></result>
		<result property="email" column="email"></result>
		<result property="hireDate" column="hiredate"></result>
	</resultMap>
	<!-- <select id="empListResultMap" parameterType="string" resultMap="empMap"> 
		select employeeId, first_name, last_name, email, hiredate from emp where 
		first_name like CONCAT('%', #{searchWord}, '%') </select> -->

	<resultMap type="com.mycom.mybatis.dto.EmpDto2" id="empMap2">
		<result property="employeeId" column="employeeId"></result>
		<result property="firstName" column="first_name"></result>
		<result property="lastName" column="last_name"></result>

	</resultMap>
	<select id="empListResultMap" parameterType="string"
		resultMap="empMap2">
		select employeeId, first_name,
		last_name
		from emp where
		first_name like CONCAT('%', #{searchWord}, '%')
	</select>

	<select id="empListParameterMap" parameterType="map"
		resultMap="empMap">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp where
		first_name = #{firstName} and last_name = #{lastName}
	</select>

	<select id="empListParameterMap2" parameterType="map"
		resultMap="empMap">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp where
		first_name = #{firstName} and last_name = #{lastName}
	</select>


	<select id="empListParameterMap3" parameterType="map"
		resultMap="empMap">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp where
		first_name = #{firstName} and last_name = #{lastName}
	</select>

	<select id="empListWhereIf" parameterType="map"
		resultMap="empMap">
		select employeeId, first_name,
		last_name, email, hiredate
		from emp
		<where>
			<!-- firstName이 있다면 -->
			<if test="firstName != null">
				first_name = #{firstName}
			</if>
			<if test="lastName != null">
				and last_name = #{lastName}
			</if>
			<if test="email != null">
				and email = #{email}
			</if>
		</where>
	</select>
</mapper>